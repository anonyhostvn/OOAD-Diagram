@startuml viewComment

actor ": User"
boundary ": ViewCommentForm"
control ": CommentController"
entity ": Comment"
entity ": ClassroomMember"

activate ": User"

": User" -> ": ViewCommentForm": 1 // request view comment 
activate ": ViewCommentForm"
": ViewCommentForm" -> ": CommentController": view_comment(token, comment_id)
activate ": CommentController"
": CommentController" -> ": ClassroomMember": read(classroom_id, user_id)
activate ": ClassroomMember"
deactivate ": ClassroomMember"
alt user is in classroom
    ": CommentController" ->> ": Comment": read(comment_id)
    activate ": Comment"
    deactivate ": Comment"
    ": ViewCommentForm" -->> ": User": // return comments
    deactivate ": CommentController"
else user is not in classroom
    ": ViewCommentForm" -->> ": User": // can not view comment
end

deactivate ": User"
deactivate ": ViewCommentForm"


@enduml