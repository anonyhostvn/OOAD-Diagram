@startuml updateScore

actor ": Teacher"

activate ": Teacher"

": Teacher" -> ": IStudentForm": // request update score
activate ": IStudentForm"
": IStudentForm" -> ": StudentController": update_score(token, classroom_member_id, created_at, test_title, score)
activate ": StudentController"
": StudentController" -> ": IClassroomMemberDB": read(classroom_id, user_id)
activate ": IClassroomMemberDB"
deactivate ": IClassroomMemberDB"
alt student is exist in classroom
    ": StudentController" ->> ": IScoreDB": create(classroom_member_id, date, test_title, score)
    activate ": IScoreDB"
    deactivate ": IScoreDB"
    ": IStudentForm" -->> ": Teacher": // Update score done
else student is exist in classroom
    deactivate ": StudentController"
    ": IStudentForm" -->> ": Teacher": // Score update failed,\n check information again
end

deactivate ": Teacher"
deactivate ": IStudentForm"


@enduml